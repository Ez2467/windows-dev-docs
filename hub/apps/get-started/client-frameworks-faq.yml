### YamlMime:FAQ
metadata:
  title: Client app development framework FAQ
  description: An tour of client app development framework choices for Microsoft developers.
  ms.topic: faq
  ms.date: 10/16/2024

title: "Client app development framework FAQ"
summary: |
  An tour of client app development framework choices for Microsoft developers.
  
  Today's Windows app development landscape offers a variety of frameworks and technologies to choose from. This FAQ provides guidance on how to decide which framework to use for your Windows app development projects. It covers the following topics:

  - The Windows app development landscape.
  - Native Windows-only app development with WinUI, WPF, and Windows Forms.
  - Targeting Windows as part of your cross-platform development strategy.
  - Hybrid and web app development with .NET MAUI, Blazor, and ASP.NET Core.
  - How to choose an approach while understanding Microsoft's investments.

sections:
  - name: The Windows app development landscape
    questions:
      - question: There are so many framework options for building apps that target Windows! How do I decide?
        answer: |
          Windows is an open platform that supports many technologies. Here are some criteria that can help you decide which platform to use:

          -	Are you building Windows-first or cross platform?
          -	Do you have experience with .NET? JavaScript? Other languages?
          -	Do you need to access Windows-specific APIs?
          - Which framework's capabilities best match your app's requirements?
          -	See [this table](/windows/apps/get-started/#app-development-framework-feature-comparison) for other decision factors.


  - name: Native Windows-only app development
    questions:
      - question: Which framework should I use to leverage Microsoft's latest investments in Windows app development?
        answer: |
          If you're building a new app, we recommend using WinUI. WinUI is the latest native UI framework for Windows app development and is designed to work across a wide range of Windows devices. WinUI provides a modern and flexible UI framework that enables you to create visually appealing and interactive Windows apps. WinUI is part of the Windows App SDK and is designed to work best with the latest versions of Windows.
          
      - question: If I have already invested heavily in WPF, should I continue to use WPF or should I consider migrating to WinUI?
        answer: |
          If you have already invested heavily in WPF, you can continue to use WPF for your existing apps. WPF is a mature and stable framework that is widely used by developers to build Windows desktop apps.

          Consider leveraging the [].NET Upgrade Assistant](/dotnet/core/porting/upgrade-assistant-overview) to migrate your .NET Framework WPF apps to the latest .NET platform. The .NET Upgrade Assistant is a tool that helps you migrate your .NET Framework apps to the latest supported versions of .NET. The .NET Upgrade Assistant analyzes your existing codebase and provides guidance on how to update your code.

      - question: My team is comfortable building Windows Forms apps, and it suits our needs. Should we consider migrating to WinUI or another framework?
        answer: |
          If your team is comfortable building Windows Forms apps and Windows Forms meets your needs, you can continue to use Windows Forms for your existing apps. Windows Forms is a mature and stable framework that is widely used by developers to build Windows desktop apps.

          The Windows Forms team is investing across features and has an active community of contributors. Some current areas of investment include:

          - Async support with common controls
          - Dark mode
          - Layout flexibility
          - Desktop security features like clipboard access

      - question: Can I leverage APIs from the Windows App SDK in my existing WPF or Windows Forms apps?
        answer: |
          Yes, you can leverage many of the APIs from the Windows App SDK in your existing WPF or Windows Forms apps. The Windows App SDK is designed to work with existing Windows desktop frameworks like WPF and Windows Forms. You can use the Windows App SDK to access new features and capabilities in your existing apps.

          See [Use the Windows App SDK in an existing project](/windows/apps/windows-app-sdk/use-windows-app-sdk-in-existing-project) for more information.

  - name: Cross-platform native development
    questions:
      - question: .NET MAUI questions
        answer: Answers with information about .NET MAUI.

      - question: React Native questions
        answer: Answers with information about React Native.

  - name: Hybrid and web development
    questions:
      - question: .NET MAUI Blazor hybrid questions
        answer: Answers with information about .NET MAUI Blazor hybrid.

      - question: .NET MAUI web hybrid questions
        answer: Answers with information about .NET MAUI web hybrid.

      - question: ASP.NET Core questions
        answer: Answers with information about ASP.NET Core.

      - question: Blazor web questions
        answer: Answers with information about Blazor web.

  - name: Choose an approach and understand Microsoft's investments
    questions:
      - question: Who is building apps with WinUI today?
        answer: Talk about Apple, Adobe, and Microsoft's investments in WinUI.

      - question: Who is building .NET MAUI apps today?
        answer: Give .NET MAUI app examples.

      - question: Who is building WPF apps today?
        answer: Talk about Visual Studio's UI and other examples.

additionalContent: |
    ## Related content

    To learn more about Windows development options, see [Overview of framework options](index.md).